
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# source .tmux.conf as suggested in `man tmux`
bind R source-file '~/.tmux.conf'

# Reload config
bind R source-file ~/.tmux.conf \; display "Config reloaded"

# enable mouse
# set -g mouse on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# new pane with same path
bind '"' split-window -h -c "#{pane_current_path}"
bind '%' split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# tmux resurrect
run-shell ~/.tmux/tmux-resurrect/resurrect.tmux

# tmux resurrect vim session
set -g @resurrect-strategy-vim 'session'

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"


############################################################################
# Status Bar

thm_bg="#1e1e2e"
thm_fg="#cdd6f4"
thm_cyan="#89dceb"
thm_black="#181825"
thm_gray="#313244"
thm_magenta="#cba6f7"
thm_pink="#f5c2e7"
thm_red="#f38ba8"
thm_green="#a6e3a1"
thm_yellow="#f9e2af"
thm_blue="#89b4fa"
thm_orange="#fab387"
thm_black4="#585b70"

# bar position
set-option -g status-position top

# tabs
# set-window-option -g window-status-format "#[fg=colour136]#[bg=colour235] #I #[bg=colour136]#[fg=colour235] #W"
# set-window-option -g window-status-current-format "#[bg=colour166]#[fg=colour235] *#I #[fg=colour166]#[bg=colour235] [#W]"
# set -g visual-activity on

# pane border
# set-option -g pane-border-fg colour235 #base02
# set-option -g pane-active-border-fg colour240 #base01
set-option -g status on

# set-option -g status-bg colour235
# set-option -g status-fg colour136 #yellow
set -g status-bg "${thm_bg}"

set -g message-style "bg=${thm_blue} fg=${thm_yellow}"

set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g status-right-length "100"

setw -g window-status-separator "|"
set -g pane-border-style "fg=${thm_gray}"
set -g pane-active-border-style "fg=${thm_blue}"

# left
set -g status-left ''
set -g status-right "#[fg=$thm_pink,bg=$thm_bg]î‚¶#[fg=$thm_bg,bg=$thm_pink]#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD) "

setw -g window-status-format "#[fg=${thm_bg},bg=${thm_blue}] #I #[fg=${thm_fg},bg=${thm_gray}] #W "
setw -g window-status-current-format "#[fg=${thm_fg},bg=${thm_orange}]#[fg=${thm_black},bg=${thm_orange}] #I #[fg=${thm_fg},bg=${thm_bg}] #W "

set-option -g visual-activity on

# use folder name as window's name
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
